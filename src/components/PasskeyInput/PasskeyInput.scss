@import '../../index.scss'; // Import base styles & variables

.passkey-input-container {
  display: flex;
  flex-wrap: wrap; // Allow wrapping on smaller screens
  align-items: flex-start; // Align items to the top
  gap: 1.5rem; // Space between avatar and controls
  margin-bottom: 1rem; // Space below the component
  padding: 1rem;
  border: 1px dashed $secondary-accent-color; // Add a subtle border to visualize the component bounds
  border-radius: 4px;

  .avatar-preview {
    flex-shrink: 0; // Prevent avatar from shrinking
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;

    .rebel-avatar {
      // Add any specific styles for the avatar within this context if needed
      margin-bottom: 0.5rem;
    }

    .strength-meter {
      margin-top: 0.5rem;
      width: 80px; // Match the avatar size roughly
      height: 8px;
      background-color: lighten($background-color, 10%);
      border-radius: 4px;
      overflow: hidden;

      .strength-bar {
        height: 100%;
        border-radius: 4px;
        transition: width 0.3s ease, background-color 0.3s ease;
      }
    }
    
    .strength-text {
        font-size: 0.8rem;
        color: $secondary-accent-color;
        margin-top: 0.3rem;
    }
  }

  .input-controls {
    flex-grow: 1; // Allow controls to take remaining space
    min-width: 250px; // Ensure controls don't get too squished

    .passkey-field-wrapper {
      position: relative;
      margin-bottom: 1rem; // Space below the input field

      input[type="text"] {
        width: 100%; // Make input take full width of its container
        padding: 0.8rem;
        padding-right: 3rem; // Make space for the button
        background-color: $background-color;
        border: 1px solid $secondary-accent-color;
        border-radius: 4px;
        color: $text-color;
        font-family: $font-monospace; // Use monospace for passkeys
        font-size: 1rem;

        &:focus {
          outline: none;
          border-color: $primary-action-color;
          box-shadow: 0 0 0 2px rgba($primary-action-color, 0.5);
        }
      }

      button.generate-button {
        position: absolute;
        right: 5px;
        top: 50%;
        transform: translateY(-50%);
        padding: 0.4rem 0.6rem;
        background-color: $secondary-accent-color;
        color: $background-color;
        border: none;
        border-radius: 3px;
        font-size: 0.8rem;
        cursor: pointer;
        transition: background-color 0.2s ease;

        &:hover {
            background-color: lighten($secondary-accent-color, 10%);
        }
      }
    }

    .validation-message {
      min-height: 1.5em; // Reserve space to prevent layout jumps
      font-size: 0.9rem;
      margin-top: 0.5rem;

      &.valid {
        color: $success-color; // Define $success-color in index.scss if needed
      }
      &.invalid {
        color: $warning-color;
      }
    }
  }

  // Media query for smaller screens
  @media (max-width: 500px) {
    flex-direction: column;
    align-items: center; // Center items when stacked

    .avatar-preview {
      margin-bottom: 1rem;
    }

    .input-controls {
      width: 100%; // Make controls take full width when stacked
    }
  }
}